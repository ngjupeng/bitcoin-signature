/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    BitcoinSignature: {
      address:
        "0x4adcaefa99b164c6557167d341388e845ee37ea5bd6cd6fad5bbca4ab41f99e",
      abi: [
        {
          type: "impl",
          name: "BitcoinSignatureImpl",
          interface_name: "contracts::BitcoinSignature::IBitcoinSignature",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::bitcoin::Secp256Signature",
          members: [
            {
              name: "r",
              type: "core::integer::u256",
            },
            {
              name: "s",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::bitcoin::BitcoinPublicKey",
          members: [
            {
              name: "x",
              type: "core::integer::u256",
            },
            {
              name: "y",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::BitcoinSignature::IBitcoinSignature",
          items: [
            {
              type: "function",
              name: "verify_message",
              inputs: [
                {
                  name: "message",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "signature",
                  type: "contracts::bitcoin::Secp256Signature",
                },
                {
                  name: "public_key",
                  type: "contracts::bitcoin::BitcoinPublicKey",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "step1",
              inputs: [
                {
                  name: "message",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "sha256",
              inputs: [
                {
                  name: "message",
                  type: "core::byte_array::ByteArray",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BitcoinSignature::BitcoinSignature::BitcoinMessageHashing",
          kind: "struct",
          members: [
            {
              name: "step1",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "step2",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BitcoinSignature::BitcoinSignature::Event",
          kind: "enum",
          variants: [
            {
              name: "BitcoinMessageHashing",
              type: "contracts::BitcoinSignature::BitcoinSignature::BitcoinMessageHashing",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x4d163fe00b92b8db36bc3e3209d6a0fba9d54efc303719003ab4519d247317e",
    },
  },
  sepolia: {
    BitcoinSignature: {
      address:
        "0x173bc2ce772615c2c6918017aa6d86fd863cee059519dbc34696f5e357b062c",
      abi: [
        {
          type: "impl",
          name: "BitcoinSignatureImpl",
          interface_name: "contracts::BitcoinSignature::IBitcoinSignature",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::bitcoin::Secp256Signature",
          members: [
            {
              name: "r",
              type: "core::integer::u256",
            },
            {
              name: "s",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::bitcoin::BitcoinPublicKey",
          members: [
            {
              name: "x",
              type: "core::integer::u256",
            },
            {
              name: "y",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::BitcoinSignature::IBitcoinSignature",
          items: [
            {
              type: "function",
              name: "verify_message",
              inputs: [
                {
                  name: "message",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "signature",
                  type: "contracts::bitcoin::Secp256Signature",
                },
                {
                  name: "public_key",
                  type: "contracts::bitcoin::BitcoinPublicKey",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "step1",
              inputs: [
                {
                  name: "message",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "sha256",
              inputs: [
                {
                  name: "message",
                  type: "core::byte_array::ByteArray",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BitcoinSignature::BitcoinSignature::BitcoinMessageHashing",
          kind: "struct",
          members: [
            {
              name: "step1",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "step2",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BitcoinSignature::BitcoinSignature::Event",
          kind: "enum",
          variants: [
            {
              name: "BitcoinMessageHashing",
              type: "contracts::BitcoinSignature::BitcoinSignature::BitcoinMessageHashing",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0xcec83a5574e95e6dd6a29799513eaac0e9713576f2959be4bbda0e7eca856a",
    },
  },
} as const;

export default deployedContracts;
